version: '3.8'

services:
  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: talk-to-my-lawyer-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - supabase
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Supabase Local Development Stack
  supabase:
    image: supabase/supabase:latest
    container_name: talk-to-my-lawyer-supabase
    ports:
      - "54321:8000"  # Supabase Studio
      - "54322:5432"  # PostgreSQL
      - "54323:3000"  # REST API
      - "54324:8443"  # Auth
      - "54325:5555"  # Edge Functions
    environment:
      - POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password
      - JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - ANON_KEY=your-anon-key-here
      - SERVICE_ROLE_KEY=your-service-role-key-here
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
      - ./supabase/config.toml:/etc/supabase/config.toml:ro
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: talk-to-my-lawyer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx Reverse Proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: talk-to-my-lawyer-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  supabase_db_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
    name: talk-to-my-lawyer-network